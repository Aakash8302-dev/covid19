{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","container","card","infected","recovered","death","Cards","_ref","_ref$data","data","confirmed","deaths","lastUpdate","react_default","a","createElement","className","styles","Grid","spacing","justify","item","component","Card","xs","md","cx","CardContent","Typography","color","gutterBottom","variant","build_default","start","end","value","duration","separator","Date","toDateString","url","fetchData","Object","asyncToGenerator","regenerator_default","mark","_callee","country","changeableUrl","_yield$axios$get","_yield$axios$get$data","wrap","_context","prev","next","concat","axios","get","sent","abrupt","t0","console","log","stop","_x","apply","this","arguments","fetchDailyData","_ref2","_callee2","_yield$axios$get2","modifiedData","_context2","map","dailyData","total","date","reportDate","fetchCountries","_ref3","_callee3","_yield$axios$get3","countries","_context3","name","Chart","_useState","useState","_useState2","slicedToArray","setDailyData","useEffect","t1","fetchAPI","lineChart","length","index_modern","labels","datasets","_ref4","label","borderColor","fill","_ref5","backgroundColor","barChart","options","legend","display","title","text","CountryPricker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","_this","setState","_this$state","src","coronaImage","alt","components_Cards_Cards","CountryPicker","components_Chart_Chart","React","Component","ReactDOM","render","StrictMode","src_App_0","document","getElementById","__webpack_require__","p"],"mappings":"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","file":"static/js/main.844732cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2w6J7\",\"card\":\"Cards_card__kAINd\",\"infected\":\"Cards_infected__27CPM\",\"recovered\":\"Cards_recovered__2xWq9\",\"death\":\"Cards_death__J6Yco\"};","import React from 'react'\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({ data: {confirmed, recovered , deaths , lastUpdate} }) => {\r\n\r\n    if(!confirmed){\r\n        return 'Loading....'\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)} >\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of covid 19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp \r\n                                    start={0}\r\n                                    end={recovered.value}\r\n                                    duration={2}\r\n                                    separator=\",\"\r\n                                />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from covid 19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.death)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp \r\n                                    start={0}\r\n                                    end={deaths.value}\r\n                                    duration={2}\r\n                                    separator=\",\"\r\n                                />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\"></Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused of covid 19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import axios from 'axios'\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n     \r\n    try {\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country)=> country.name);\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, {useState, useEffect} from 'react'\r\nimport {fetchDailyData} from '../../api/index'\r\nimport {Line, Bar} from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({data:{confirmed, deaths, recovered}, country}) => {\r\n\r\n    const[dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(()=> {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n\r\n        console.log(dailyData);\r\n\r\n        \r\n    },[]);\r\n\r\n\r\n    const lineChart=(\r\n        dailyData.length\r\n            ? (\r\n            <Line \r\n            data={{\r\n                labels: dailyData.map(({date}) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill: true,\r\n                }]\r\n            }}\r\n        />) : null\r\n    )\r\n\r\n    const barChart = (\r\n        confirmed\r\n          ? (\r\n              <Bar \r\n                  data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                            'rgba(0,0,255,0.5)',\r\n                            'rgba(0,255,0,0.5)',\r\n                            'rgba(255,0,0,0.5)',\r\n                        ],\r\n                        data:[confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                  }}\r\n                  options={{\r\n                      legend: {display:false},\r\n                      title: {display: true, text: `Current state in ${country}`}\r\n                  }}\r\n              />\r\n          ): null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React,{useState, useEffect} from 'react'\r\nimport {NativeSelect, FormControl} from '@material-ui/core'\r\n\r\nimport styles from './CountryPicker.module.css'\r\n\r\nimport {fetchCountries} from '../../api/index'\r\n\r\nconst CountryPricker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n        const fetchAPI = async ()=>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n\r\n    },[setFetchedCountries]);\r\n\r\n    console.log(fetchedCountries);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\" \" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country} >{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPricker\r\n","import React from 'react';\nimport './App.css'\n\nimport Cards from './components/Cards/Cards'\nimport Chart from './components/Chart/Chart'\nimport CountryPicker from './components/CountryPicker/CountryPicker'\n\nimport {fetchData} from './api/index'\n\nimport coronaImage from './images/image.png'\n\n\nclass App extends React.Component{\n\n  state={\n    data:{},\n    country: ''\n  }\n\n  async componentDidMount(){\n    const fetchedData = await fetchData();\n\n    this.setState({data: fetchedData});\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    \n    this.setState({data: fetchedData, country: country})\n  }\n\n  render(){\n\n    const {data, country} = this.state\n\n    return (\n      <div className=\"container\">\n        <img className=\"image\" src={coronaImage}  alt=\"covid\"/>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\n        <Chart data={data} country={country} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2dM9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1Pqg2\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}